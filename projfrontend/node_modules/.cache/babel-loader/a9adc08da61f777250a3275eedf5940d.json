{"ast":null,"code":"var _jsxFileName = \"E:\\\\Codes\\\\lcomernbootcamp\\\\projfrontend\\\\src\\\\user\\\\Signin.js\";\nimport React, { useState } from 'react';\nimport Base from '../core/Base';\nimport { Link, Redirect } from 'react-router-dom'; //importing index.js from auth/helper\n\nimport { signin, authenticate, isAuthenticated } from \"../auth/helper\";\n\nconst Signin = () => {\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n    error: \"\",\n    loading: false,\n    //for loading message\n    //redirect the user to user panel or admin panel based on their role, it is going to come from 'react-router-dom'\n    didRedirect: false\n  });\n  const {\n    email,\n    password,\n    error,\n    loading,\n    didRedirect\n  } = values; //isAuthenticated() returns JSON.parse entire local storage object which has this jwt, so we are holding the things\n  //that are returned \n\n  const {\n    user\n  } = isAuthenticated();\n\n  const handleChange = name => event => {\n    setValues({ ...values,\n      error: false,\n      [name]: event.target.value\n    });\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values,\n      error: false,\n      loading: true\n    });\n    signin({\n      email,\n      password\n    }).then(data => {\n      if (data.error) {\n        setValues({ ...values,\n          error: data.error,\n          loading: false\n        });\n      } else {\n        //authenticate is kind of middleware,\n        authenticate(data);\n      }\n    }).catch(console.log(\"Error in SignUp\"));\n  };\n\n  const signInForm = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 offset-sm-3 text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      onChange: handleChange(\"email\"),\n      type: \"email\",\n      value: email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      onChange: handleChange(\"password\"),\n      type: \"password\",\n      value: password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success btn-block\",\n      onClick: onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, \"Submit\"))));\n  };\n\n  return /*#__PURE__*/React.createElement(Base, {\n    title: \"SignIn Page\",\n    description: \"A page for user to SignIn!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, signInForm());\n};\n\nexport default Signin;","map":{"version":3,"sources":["E:/Codes/lcomernbootcamp/projfrontend/src/user/Signin.js"],"names":["React","useState","Base","Link","Redirect","signin","authenticate","isAuthenticated","Signin","values","setValues","email","password","error","loading","didRedirect","user","handleChange","name","event","target","value","onSubmit","preventDefault","then","data","catch","console","log","signInForm"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport Base from '../core/Base'\r\nimport {Link, Redirect} from 'react-router-dom'\r\n//importing index.js from auth/helper\r\nimport {signin, authenticate, isAuthenticated} from \"../auth/helper\"\r\n\r\nconst Signin = () => {\r\n    const [values, setValues] = useState({\r\n        email : \"\",\r\n        password : \"\",\r\n        error : \"\",\r\n        loading : false, //for loading message\r\n        //redirect the user to user panel or admin panel based on their role, it is going to come from 'react-router-dom'\r\n        didRedirect : false\r\n    })\r\n\r\n    const {email, password, error, loading, didRedirect} = values\r\n    //isAuthenticated() returns JSON.parse entire local storage object which has this jwt, so we are holding the things\r\n    //that are returned \r\n    const {user} = isAuthenticated()\r\n\r\n    const handleChange = name => event => {\r\n        setValues({...values, error : false, [name] : event.target.value})\r\n    }\r\n\r\n    const onSubmit = event => {\r\n        event.preventDefault()\r\n        setValues({...values, error : false, loading : true})\r\n        signin({email, password})\r\n        .then(data => {\r\n            if(data.error){\r\n                setValues({...values, error : data.error, loading : false})\r\n            } else {\r\n                //authenticate is kind of middleware,\r\n                authenticate(data, )\r\n            }\r\n        })\r\n        .catch(console.log(\"Error in SignUp\"))\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const signInForm = () => {\r\n        return(\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-sm-3 text-left\">\r\n                    <form>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"text-light\">Email</label>\r\n                            <input className=\"form-control\" onChange={handleChange(\"email\")} type=\"email\" value={email}/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"text-light\">Password</label>\r\n                            <input className=\"form-control\" onChange={handleChange(\"password\")} type=\"password\" value={password}/>\r\n                        </div>\r\n                        <button className=\"btn btn-success btn-block\" onClick={onSubmit}>Submit</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <Base title=\"SignIn Page\" description=\"A page for user to SignIn!\">\r\n        {signInForm()}\r\n        </Base>\r\n    )\r\n}\r\n\r\nexport default Signin;"]},"metadata":{},"sourceType":"module"}