{"ast":null,"code":"import { API } from \"../../backend\"; //create a category\n\nexport const createCategory = (userId, token, category) => {\n  return fetch(`${API}/category/create/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(category)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //get all categories\n//getting all the categories and showing them in the frontend\n//this can be also used on manage categories to get all the categories\n\nexport const getCategories = () => {\n  return fetch(`${API}/categories`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //create a product\n\nexport const createaProduct = (userId, token, product) => {\n  return fetch(`${API}/product/create/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: product\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //get all products\n\nexport const getProducts = () => {\n  return fetch(`${API}/products`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //delete a product\n\nexport const deleteProduct = (productId, userId, token) => {\n  return fetch(`${API}/product/${productId}/${userId}`, {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //get a product\n\nexport const getProduct = productId => {\n  return fetch(`${API}/product/${productId}`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //update a product\n\nexport const updateProduct = (productId, userId, token, product) => {\n  //productId since we are updating a product, userId, token is for validation and product is the new information that is coming up\n  return fetch(`${API}/product/${productId}/${userId}`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: product //product is the new updated information which is going to replace productId handled by our backend\n\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["E:/Codes/lcomernbootcamp/projfrontend/src/admin/helper/adminapicall.js"],"names":["API","createCategory","userId","token","category","fetch","method","headers","Accept","Authorization","body","JSON","stringify","then","response","json","catch","err","console","log","getCategories","createaProduct","product","getProducts","deleteProduct","productId","getProduct","updateProduct"],"mappings":"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","sourcesContent":["import { API } from \"../../backend\";\r\n\r\n\r\n//create a category\r\nexport const createCategory = (userId, token, category) => {\r\n    return fetch(`${API}/category/create/${userId}`, {\r\n        method : \"POST\",\r\n        headers : {\r\n            Accept : \"application/json\",\r\n            \"Content-Type\" : \"application/json\",\r\n            Authorization : `Bearer ${token}`\r\n        },\r\n        body : JSON.stringify(category)\r\n    })\r\n    .then(response => {\r\n        return response.json()\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\n//get all categories\r\n//getting all the categories and showing them in the frontend\r\n//this can be also used on manage categories to get all the categories\r\nexport const getCategories = () => {\r\n    return fetch(`${API}/categories`, {\r\n        method : \"GET\"\r\n    })\r\n    .then(response => {\r\n        return response.json()\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\n\r\n//create a product\r\nexport const createaProduct = (userId, token, product) => {\r\n    return fetch(`${API}/product/create/${userId}`, {\r\n        method : \"POST\",\r\n        headers : {\r\n            Accept : \"application/json\",\r\n            Authorization : `Bearer ${token}`\r\n        },\r\n        body : product\r\n    })\r\n    .then(response => {\r\n        return response.json()\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\n//get all products\r\nexport const getProducts = () => {\r\n    return fetch(`${API}/products`, {\r\n        method : \"GET\"\r\n    })\r\n    .then(response => {\r\n        return response.json()\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\n//delete a product\r\nexport const deleteProduct = (productId, userId, token) => {\r\n    return fetch(`${API}/product/${productId}/${userId}`, {\r\n        method : \"DELETE\",\r\n        headers : {\r\n            Accept : \"application/json\",\r\n            Authorization : `Bearer ${token}`\r\n        }\r\n    })\r\n    .then(response => {\r\n        return response.json()\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\n\r\n//get a product\r\nexport const getProduct = productId => {\r\n    return fetch(`${API}/product/${productId}`, {\r\n        method : \"GET\"\r\n    })\r\n    .then(response => {\r\n        return response.json()\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\n//update a product\r\nexport const updateProduct = (productId, userId, token, product) => {\r\n    //productId since we are updating a product, userId, token is for validation and product is the new information that is coming up\r\n    return fetch(`${API}/product/${productId}/${userId}`, {\r\n        method : \"PUT\",\r\n        headers : {\r\n            Accept : \"application/json\",\r\n            Authorization : `Bearer ${token}`\r\n        },\r\n        body : product //product is the new updated information which is going to replace productId handled by our backend\r\n    })\r\n    .then(response => {\r\n        return response.json()\r\n    })\r\n    .catch(err => console.log(err))\r\n}"]},"metadata":{},"sourceType":"module"}