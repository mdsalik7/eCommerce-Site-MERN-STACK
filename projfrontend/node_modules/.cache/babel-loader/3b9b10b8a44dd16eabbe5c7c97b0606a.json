{"ast":null,"code":"var _jsxFileName = \"E:\\\\Codes\\\\lcomernbootcamp\\\\projfrontend\\\\src\\\\core\\\\Card.js\";\nimport React, { useState, useEffect } from 'react';\nimport ImageHelper from './helper/ImageHelper';\nimport { Redirect } from 'react-router-dom';\nimport { addItemToCart } from './cartHelper';\n\nconst Card = ({\n  product,\n  //default property for addtoCart, removeFromCart\n  addtoCart = true,\n  removeFromCart = false\n}) => {\n  const [redirect, setRedirect] = useState(false); //initially its false as nothing is getting redirect automatically\n\n  const [count, setCount] = useState(product.count); //introducing a new property in the product i.e count (used in cartHelper)\n  //cartTitle is based on product, if there is a product present extract the name from product else use the given string\n\n  const cartTitle = product ? product.name : \"A Photo from Pexels\";\n  const cartDescription = product ? product.description : \"Default Description\";\n  const cartPrice = product ? product.price : \"Default Price\"; //method to add to cart\n\n  const addToCart = () => {\n    //calling addItemToCart() from cartHelper and setting setRedirect to true\n    addItemToCart(product, () => setRedirect(true));\n  }; //method to redirect\n\n\n  const getARedirect = redirect => {\n    if (redirect) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/cart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 20\n        }\n      });\n    }\n  }; //method to show add to cart \n\n\n  const showAddToCart = addtoCart => {\n    return (//Conditional rendering(not to show add to cart option in the cart menu), addToCart is set to true and button is always true\n      //by changing addToCart to false we ll be able to perform the conditional rendering(i.e addto)\n      addtoCart && /*#__PURE__*/React.createElement(\"button\", {\n        onClick: addToCart,\n        className: \"btn btn-block btn-outline-success mt-2 mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, \"Add To Cart\")\n    );\n  }; //method to show remove from cart\n\n\n  const showRemoveFromCart = removeFromCart => {\n    return (//Conditional rendering(not to show remove from cart option when the product is not in the cart), removeFromCart is set to false\n      removeFromCart && /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {},\n        className: \"btn btn-block btn-outline-danger mt-2 mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }, \"Remove from cart\")\n    );\n  }; //template from 17.1\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card text-white bg-dark border border-info \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, cartTitle), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, getARedirect(redirect), /*#__PURE__*/React.createElement(ImageHelper, {\n    product: product,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead bg-success font-weight-normal text-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, cartDescription), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"btn btn-success rounded  btn-sm px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, \"Rs. \", cartPrice), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, showAddToCart(addtoCart)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, showRemoveFromCart))));\n};\n\nexport default Card;","map":{"version":3,"sources":["E:/Codes/lcomernbootcamp/projfrontend/src/core/Card.js"],"names":["React","useState","useEffect","ImageHelper","Redirect","addItemToCart","Card","product","addtoCart","removeFromCart","redirect","setRedirect","count","setCount","cartTitle","name","cartDescription","description","cartPrice","price","addToCart","getARedirect","showAddToCart","showRemoveFromCart"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport ImageHelper from './helper/ImageHelper';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { addItemToCart } from './cartHelper';\r\n\r\nconst Card = ({\r\n    product,\r\n    //default property for addtoCart, removeFromCart\r\n    addtoCart = true,\r\n    removeFromCart = false\r\n}) => {\r\n\r\n    const [redirect, setRedirect] = useState(false) //initially its false as nothing is getting redirect automatically\r\n    const [count, setCount] = useState(product.count) //introducing a new property in the product i.e count (used in cartHelper)\r\n\r\n\r\n    //cartTitle is based on product, if there is a product present extract the name from product else use the given string\r\n    const cartTitle = product ? product.name : \"A Photo from Pexels\"\r\n    const cartDescription = product ? product.description : \"Default Description\"\r\n    const cartPrice = product ? product.price : \"Default Price\"\r\n\r\n\r\n    //method to add to cart\r\n    const addToCart = () => {\r\n        //calling addItemToCart() from cartHelper and setting setRedirect to true\r\n        addItemToCart(product, () => setRedirect(true))\r\n    }\r\n\r\n\r\n    //method to redirect\r\n    const getARedirect = (redirect) => {\r\n        if(redirect){\r\n            return <Redirect to=\"/cart\" />\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //method to show add to cart \r\n    const showAddToCart = addtoCart => {\r\n        return(\r\n            //Conditional rendering(not to show add to cart option in the cart menu), addToCart is set to true and button is always true\r\n            //by changing addToCart to false we ll be able to perform the conditional rendering(i.e addto)\r\n            addtoCart && (\r\n                <button\r\n                onClick={addToCart}\r\n                className=\"btn btn-block btn-outline-success mt-2 mb-2\"\r\n              >\r\n                 Add To Cart\r\n              </button>\r\n            )\r\n        )\r\n\r\n    }\r\n    //method to show remove from cart\r\n    const showRemoveFromCart = removeFromCart => {\r\n        return(\r\n            //Conditional rendering(not to show remove from cart option when the product is not in the cart), removeFromCart is set to false\r\n            removeFromCart && (\r\n            <button\r\n                onClick={() => {}}\r\n                className=\"btn btn-block btn-outline-danger mt-2 mb-2\"\r\n              >\r\n                Remove from cart\r\n              </button>\r\n            )\r\n        )\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    //template from 17.1\r\n    return (\r\n      <div className=\"card text-white bg-dark border border-info \">\r\n        <div className=\"card-header lead\">{cartTitle}</div>\r\n        <div className=\"card-body\">\r\n            {getARedirect(redirect)}\r\n            <ImageHelper product={product}/> \r\n          <p className=\"lead bg-success font-weight-normal text-wrap\">\r\n            {cartDescription}\r\n          </p>\r\n    <p className=\"btn btn-success rounded  btn-sm px-4\">Rs. {cartPrice}</p>\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n                {/*calling showAddToCart() while passing the property addTocart */}\r\n              {showAddToCart(addtoCart)}\r\n            </div>\r\n            <div className=\"col-12\">\r\n                {showRemoveFromCart}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Card"]},"metadata":{},"sourceType":"module"}