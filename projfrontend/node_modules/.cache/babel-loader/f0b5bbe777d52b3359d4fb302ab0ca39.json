{"ast":null,"code":"var _jsxFileName = \"E:\\\\Codes\\\\lcomernbootcamp\\\\projfrontend\\\\src\\\\admin\\\\AddCategory.js\";\nimport React, { useState } from 'react';\nimport Base from '../core/Base';\nimport { isAuthenticated } from '../auth/helper';\nimport { Link } from 'react-router-dom';\n\nconst AddCategory = () => {\n  //setName, setError, .. is setter method to set the value in name, error, ..\n  const [name, setName] = useState(\"\"); //creating states, which ll be initially empty\n\n  const [error, setError] = useState(false); //we also need success and error messages in the state which will be boolean, which ll be initially false\n\n  const [success, setSuccess] = useState(false); //extracting information(user, token) from isAuthenticated()\n\n  const {\n    user,\n    token\n  } = isAuthenticated();\n\n  const goBack = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"btn btn-sm btn-success mb-3\",\n    to: \"/admin/dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, \"Admin Home\"));\n\n  const handleChange = event => {\n    //we dont directly interact with the values name, error, success, we always use setName, setError ..\n    setError(\"\"); //empty out the error there might be error from the last case\n\n    setName(event.target.value); //value of the input, the value in the form will get into the state\n  };\n\n  const onSubmit = event => {\n    event.pr;\n  };\n\n  const myCategoryForm = () => /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Enter the Category\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control my-3\",\n    onChange: handleChange,\n    value: name,\n    autoFocus: true,\n    required: true,\n    placeholder: \"For Ex. Summer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onSubmit,\n    className: \"btn btn-outline-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Create Category\")));\n\n  return /*#__PURE__*/React.createElement(Base, {\n    title: \"Create a Category Here\",\n    description: \"Add a New Category\",\n    className: \"container bg-info p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row bg-white rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8 offset-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, myCategoryForm(), goBack())));\n};\n\nexport default AddCategory;","map":{"version":3,"sources":["E:/Codes/lcomernbootcamp/projfrontend/src/admin/AddCategory.js"],"names":["React","useState","Base","isAuthenticated","Link","AddCategory","name","setName","error","setError","success","setSuccess","user","token","goBack","handleChange","event","target","value","onSubmit","pr","myCategoryForm"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAC1B;AACI,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC,CAFsB,CAEkB;;AACxC,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,KAAD,CAAlC,CAHsB,CAGoB;;AAC1C,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC,CAJsB,CAM1B;;AACI,QAAM;AAACW,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAgBV,eAAe,EAArC;;AAGA,QAAMW,MAAM,GAAG,mBACX;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,6BAAhB;AAA8C,IAAA,EAAE,EAAC,kBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADJ;;AAQA,QAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B;AACAP,IAAAA,QAAQ,CAAC,EAAD,CAAR,CAF4B,CAEf;;AACbF,IAAAA,OAAO,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP,CAH4B,CAGA;AAC7B,GAJD;;AAMA,QAAMC,QAAQ,GAAIH,KAAD,IAAW;AAC1BA,IAAAA,KAAK,CAACI,EAAN;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAG,mBACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,IAAA,QAAQ,EAAEN,YAHZ;AAIE,IAAA,KAAK,EAAET,IAJT;AAKE,IAAA,SAAS,MALX;AAME,IAAA,QAAQ,MANV;AAOE,IAAA,WAAW,EAAC,gBAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAWE;AAAQ,IAAA,OAAO,EAAEa,QAAjB;AAA2B,IAAA,SAAS,EAAC,sBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAXF,CADF,CADJ;;AAmBA,sBACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,wBAAZ;AAAqC,IAAA,WAAW,EAAC,oBAAjD;AAAsE,IAAA,SAAS,EAAC,uBAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,cAAc,EADnB,EAEKP,MAAM,EAFX,CADJ,CADJ,CADJ;AAUH,CAzDD;;AA2DA,eAAeT,WAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport Base from '../core/Base'\r\nimport { isAuthenticated } from '../auth/helper'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst AddCategory = () => {\r\n//setName, setError, .. is setter method to set the value in name, error, ..\r\n    const [name, setName] = useState(\"\")    //creating states, which ll be initially empty\r\n    const [error, setError] = useState(false) //we also need success and error messages in the state which will be boolean, which ll be initially false\r\n    const [success, setSuccess] = useState(false)\r\n\r\n//extracting information(user, token) from isAuthenticated()\r\n    const {user, token} = isAuthenticated();\r\n\r\n\r\n    const goBack = () => (\r\n        <div className=\"mt-5\">\r\n          <Link className=\"btn btn-sm btn-success mb-3\" to=\"/admin/dashboard\">\r\n            Admin Home\r\n          </Link>\r\n        </div>\r\n      );\r\n\r\n    const handleChange = event => {\r\n      //we dont directly interact with the values name, error, success, we always use setName, setError ..\r\n      setError(\"\") //empty out the error there might be error from the last case\r\n      setName(event.target.value) //value of the input, the value in the form will get into the state\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n      event.pr\r\n    }\r\n\r\n    const myCategoryForm = () => (\r\n        <form>\r\n          <div className=\"form-group\">\r\n            <p className=\"lead\">Enter the Category</p>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control my-3\"\r\n              onChange={handleChange}\r\n              value={name}\r\n              autoFocus\r\n              required\r\n              placeholder=\"For Ex. Summer\"\r\n            />\r\n            <button onClick={onSubmit} className=\"btn btn-outline-info\">Create Category</button>\r\n          </div>\r\n        </form>\r\n      );\r\n\r\n\r\n    return (\r\n        <Base title=\"Create a Category Here\" description=\"Add a New Category\" className=\"container bg-info p-4\">\r\n            <div className=\"row bg-white rounded\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {myCategoryForm()}\r\n                    {goBack()}\r\n                </div>\r\n            </div>\r\n        </Base>\r\n    )\r\n}\r\n\r\nexport default AddCategory"]},"metadata":{},"sourceType":"module"}