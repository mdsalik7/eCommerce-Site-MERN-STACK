{"ast":null,"code":"var _jsxFileName = \"E:\\\\Codes\\\\lcomernbootcamp\\\\projfrontend\\\\src\\\\core\\\\Paymentb.js\";\nimport React, { useState, useEffect } from 'react';\nimport { loadCart, cartEmpty } from './helper/cartHelper';\nimport { Link } from 'react-router-dom';\nimport { getmeToken, processPayment } from './helper/paymentbhelper';\nimport { createOrder } from './helper/orderHelper';\nimport { isAuthenticated } from '../auth/helper';\nimport DropIn from 'braintree-web-drop-in-react';\n\nconst Paymentb = ({\n  products,\n  setReload = f => f,\n  reload = undefined\n}) => {\n  const [info, setInfo] = useState({\n    loading: false,\n    success: false,\n    clientToken: null,\n    //from the braintree-web-drop-in-react docx\n    error: \"\",\n    instance: {} //instance gets automatically filled with request\n\n  });\n\n  const userId = isAuthenticated() && isAuthenticated().user._id;\n\n  const token = isAuthenticated() && isAuthenticated().token; //getToken will fire up my custom method getmeToken\n\n  const getToken = (userId, token) => {\n    getmeToken(userId, token).then(info => {\n      console.log(\"INFORMATION\", info);\n\n      if (info.error) {\n        setInfo({ ...info,\n          error: info.error\n        });\n      } else {\n        const clientToken = info.clientToken; //update the state\n\n        setInfo({\n          clientToken\n        }); //this means clientToken : clientToken, but we are using es6 so thats the syntax\n      }\n    });\n  }; //Web Drop In - Conditional rendering - if there is isAuthenticated() i.e the user is authenticated and the \n  //product length is greater than 0 i.e there are products then show this drop in\n\n\n  const showbtdropIn = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, info.clientToken !== null && products.length > 0 ?\n    /*#__PURE__*/\n    //from braintree-web-drop-in-react docx\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DropIn, {\n      options: {\n        authorization: info.clientToken\n      },\n      onInstance: instance => info.instance = instance,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, \"Buy\")) : /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, \"Please Login\"));\n  };\n\n  useEffect(() => {\n    getToken(userId, token);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"Test bt\"));\n};\n\nexport default Paymentb;","map":{"version":3,"sources":["E:/Codes/lcomernbootcamp/projfrontend/src/core/Paymentb.js"],"names":["React","useState","useEffect","loadCart","cartEmpty","Link","getmeToken","processPayment","createOrder","isAuthenticated","DropIn","Paymentb","products","setReload","f","reload","undefined","info","setInfo","loading","success","clientToken","error","instance","userId","user","_id","token","getToken","then","console","log","showbtdropIn","length","authorization"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,qBAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,yBAA3C;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,SAAS,GAAGC,CAAC,IAAIA,CAA5B;AAA+BC,EAAAA,MAAM,GAAGC;AAAxC,CAAD,KAAwD;AAErE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC;AAC7BkB,IAAAA,OAAO,EAAG,KADmB;AAE7BC,IAAAA,OAAO,EAAG,KAFmB;AAG7BC,IAAAA,WAAW,EAAG,IAHe;AAGT;AACpBC,IAAAA,KAAK,EAAG,EAJqB;AAK7BC,IAAAA,QAAQ,EAAG,EALkB,CAKf;;AALe,GAAD,CAAhC;;AAQA,QAAMC,MAAM,GAAGf,eAAe,MAAMA,eAAe,GAAGgB,IAAlB,CAAuBC,GAA3D;;AACA,QAAMC,KAAK,GAAGlB,eAAe,MAAMA,eAAe,GAAGkB,KAArD,CAXqE,CAarE;;AACA,QAAMC,QAAQ,GAAG,CAACJ,MAAD,EAASG,KAAT,KAAmB;AAChCrB,IAAAA,UAAU,CAACkB,MAAD,EAASG,KAAT,CAAV,CAA0BE,IAA1B,CAA+BZ,IAAI,IAAI;AACnCa,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2Bd,IAA3B;;AACA,UAAGA,IAAI,CAACK,KAAR,EAAc;AACVJ,QAAAA,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAUK,UAAAA,KAAK,EAAGL,IAAI,CAACK;AAAvB,SAAD,CAAP;AACH,OAFD,MAEK;AACD,cAAMD,WAAW,GAAGJ,IAAI,CAACI,WAAzB,CADC,CAED;;AACAH,QAAAA,OAAO,CAAC;AAACG,UAAAA;AAAD,SAAD,CAAP,CAHC,CAGsB;AAC1B;AACJ,KATD;AAUH,GAXD,CAdqE,CA2BrE;AACA;;;AACA,QAAMW,YAAY,GAAG,MAAM;AACvB,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKf,IAAI,CAACI,WAAL,KAAqB,IAArB,IAA6BT,QAAQ,CAACqB,MAAT,GAAkB,CAA/C;AAAA;AACG;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,MAAD;AACE,MAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAEjB,IAAI,CAACI;AAAtB,OADX;AAEE,MAAA,UAAU,EAAGE,QAAD,IAAeN,IAAI,CAACM,QAAL,GAAgBA,QAF7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAKA;AAAQ,MAAA,OAAO,EAAE,MAAM,CAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALA,CAFH,gBAUD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXJ,CADJ;AAmBH,GApBD;;AAyBArB,EAAAA,SAAS,CAAC,MAAM;AACZ0B,IAAAA,QAAQ,CAACJ,MAAD,EAASG,KAAT,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;AAKA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ;AAKH,CAhED;;AAkEA,eAAehB,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { loadCart, cartEmpty } from './helper/cartHelper'\r\nimport { Link } from 'react-router-dom'\r\nimport { getmeToken, processPayment } from './helper/paymentbhelper'\r\nimport { createOrder } from './helper/orderHelper'\r\nimport { isAuthenticated } from '../auth/helper'\r\nimport DropIn from 'braintree-web-drop-in-react'\r\n\r\n\r\nconst Paymentb = ({products, setReload = f => f, reload = undefined}) => {\r\n\r\n    const [info, setInfo] = useState({\r\n        loading : false,\r\n        success : false,\r\n        clientToken : null, //from the braintree-web-drop-in-react docx\r\n        error : \"\",\r\n        instance : {} //instance gets automatically filled with request\r\n    })\r\n\r\n    const userId = isAuthenticated() && isAuthenticated().user._id\r\n    const token = isAuthenticated() && isAuthenticated().token\r\n\r\n    //getToken will fire up my custom method getmeToken\r\n    const getToken = (userId, token) => {\r\n        getmeToken(userId, token).then(info => {\r\n            console.log(\"INFORMATION\", info)\r\n            if(info.error){\r\n                setInfo({...info, error : info.error})\r\n            }else{\r\n                const clientToken = info.clientToken\r\n                //update the state\r\n                setInfo({clientToken}) //this means clientToken : clientToken, but we are using es6 so thats the syntax\r\n            }\r\n        })\r\n    }\r\n\r\n    //Web Drop In - Conditional rendering - if there is isAuthenticated() i.e the user is authenticated and the \r\n    //product length is greater than 0 i.e there are products then show this drop in\r\n    const showbtdropIn = () => {\r\n        return(\r\n            <div>\r\n                {info.clientToken !== null && products.length > 0 ? (\r\n                    //from braintree-web-drop-in-react docx\r\n                    <div>\r\n                    <DropIn\r\n                      options={{ authorization: info.clientToken }}\r\n                      onInstance={(instance) => (info.instance = instance)}\r\n                    />\r\n                    <button onClick={() => {}}>Buy</button>\r\n                  </div>\r\n                ) : (\r\n                <h3>\r\n                    Please Login \r\n\r\n                </h3>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        getToken(userId, token)\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3>Test bt</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paymentb"]},"metadata":{},"sourceType":"module"}